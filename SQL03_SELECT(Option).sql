

--1

SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS "주소지"
FROM TB_STUDENT
ORDER BY STUDENT_NAME ;


--2
SELECT STUDENT_NAME , STUDENT_SSN 
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY SUBSTR(STUDENT_SSN, 1, 2) DESC  ;


--3

SELECT STUDENT_NAME 학생이름, STUDENT_NO 학번, STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT 
WHERE (STUDENT_ADDRESS LIKE '%강원%' 
OR STUDENT_ADDRESS LIKE '%경기%')
AND STUDENT_NO NOT LIKE 'A%'
--AND STUDENT_NO LIKE '9%'
ORDER BY STUDENT_NAME ;



--4
SELECT *
FROM TB_DEPARTMENT td ;

SELECT PROFESSOR_NAME , PROFESSOR_SSN 
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = 005
ORDER BY SUBSTR(PROFESSOR_SSN,1,2) ;

SELECT PROFESSOR_NAME , PROFESSOR_SSN 
FROM TB_PROFESSOR 
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '법학과'
ORDER BY 2;

--5

SELECT STUDENT_NO , TO_CHAR(POINT, 'FM9.00') 
FROM TB_GRADE
WHERE TERM_NO = '200402'
AND CLASS_NO = 'C3118100'
ORDER BY POINT DESC, STUDENT_NO  ;


--6
SELECT STUDENT_NO , STUDENT_NAME , DEPARTMENT_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
--ORDER BY STUDENT_NAME;

--7

SELECT CLASS_NAME, DEPARTMENT_NAME 
FROM TB_CLASS 
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);


--8 
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO);

--GROUP BY CLASS_NAME;


--9 
-- 8번의 결과 중 '인문 사회' 계열에 속한 과목의 교수 이름을 찾으려고 한다.
-- 이에 해당하는 과목 이름과 교수 이름을 출력하는 SQL문을 작성하시오.

SELECT CLASS_NAME , PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR p USING(PROFESSOR_NO)
JOIN TB_DEPARTMENT d ON(p.DEPARTMENT_NO = d.DEPARTMENT_NO) 
WHERE CATEGORY ='인문사회';


--10
-- '음악학과' 학생들의 평점을 구하려고 한다. 음악학과 학생들의 "학번", "학생 이름", "전체 평점"을 출력하는 SQL 문장을 작성하시오.
-- (단, 평점은 소수점 1자리까지만 반올림하여 표시한다.)

SELECT STUDENT_NO AS 학번, STUDENT_NAME AS "학생 이름", ROUND(AVG(POINT),1)
FROM TB_STUDENT 
JOIN TB_GRADE USING(STUDENT_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과';


SELECT ts.STUDENT_NO AS 학번, ts.STUDENT_NAME AS "학생 이름", ROUND(AVG(POINT),1) AS "전체 평점"
FROM TB_GRADE tg 
JOIN TB_STUDENT ts ON(ts.STUDENT_NO = tg.STUDENT_NO)
JOIN TB_DEPARTMENT td ON(ts.DEPARTMENT_NO = td.DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY ts.STUDENT_NO , STUDENT_NAME
ORDER BY 학번;




--11
SELECT DEPARTMENT_NAME , STUDENT_NAME , PROFESSOR_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE STUDENT_NO = 'A313047'


--12
SELECT STUDENT_NAME , TERM_NO AS "TERM_NAME"
FROM TB_GRADE tg 
JOIN TB_STUDENT USING(STUDENT_NO)
JOIN TB_CLASS USING(CLASS_NO)
WHERE TERM_NO LIKE '2007%'
AND CLASS_NAME = '인간관계론';


--13

SELECT CLASS_NAME, DEPARTMENT_NAME 
FROM TB_CLASS 
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
LEFT JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
WHERE CATEGORY = '예체능'
AND PROFESSOR_NO IS NULL;

--14

-- 춘 기술대학교 서반아어학과 학생들의 지도교수를 게시하고자 한다. 
-- 학생이름과 지도교수 이름을 찾고 만일 지도 교수가 없는 학생일 경우
-- "지도교수 미지정"으로 표시하도록 하는 SQL 문을 작성하시오.
-- 단 출력헤더는 "학생이름", "지도교수"로 표시하며 고학번 학생이 먼저 표시되도록 한다.


SELECT STUDENT_NAME 학생이름 , NVL(PROFESSOR_NAME, '지도교수 미지정') 지도교수
FROM TB_STUDENT ts
LEFT JOIN TB_PROFESSOR tp ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
JOIN TB_DEPARTMENT td ON (ts.DEPARTMENT_NO = td.DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '서반아어학과'
ORDER BY STUDENT_NO ;




SELECT DISTINCT STUDENT_NAME 학생이, NVL(COACH_PROFESSOR_NO, PROFESSOR_NAME,'지도교수 미지정') 지도교 
FROM TB_STUDENT s
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_CLASS USING(DEPARTMENT_NO)
LEFT JOIN TB_PROFESSOR p ON(s.COACH_PROFESSOR_NO = p.PROFESSOR_NO)
WHERE DEPARTMENT_NAME LIKE '서반아어%'
ORDER BY STUDENT_NO ;


--15
-- 휴학생이 아닌 학생 중 평점이 4.0 이상인 학생을 찾아 그 학생의 학번, 이름, 학과, 이름, 평점을 출력하는 SQL문을 작성하시오.

SELECT STUDENT_NO 학번, STUDENT_NAME  이름, DEPARTMENT_NAME "학과 이름", ROUND(AVG(POINT),1) 평점
FROM TB_STUDENT ts
JOIN TB_DEPARTMENT td USING(DEPARTMENT_NO)
JOIN TB_GRADE tg USING(STUDENT_NO)
WHERE ABSENCE_YN = 'N'
GROUP BY STUDENT_NO , STUDENT_NAME , DEPARTMENT_NAME 
HAVING AVG(POINT) >= 4.0
ORDER BY STUDENT_NO ;



SELECT STUDENT_NO 학번, STUDENT_NAME 이름,  DEPARTMENT_NAME "학과 이름", point 평점
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(STUDENT_NO)
WHERE ABSENCE_YN ='N'
AND POINT >= 4.0;



--16
-- 환경조경학과 전공과목들의 과목 별 평점을 파악할 수 있는 SQL 문을 작성하시오.

SELECT CLASS_NO , CLASS_NAME , AVG(POINT)
FROM TB_CLASS tc
JOIN TB_GRADE tg USING(CLASS_NO)
JOIN TB_DEPARTMENT td USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '환경조경학과'
AND CLASS_TYPE LIKE '전공%'
GROUP BY CLASS_NO , CLASS_NAME 
ORDER BY CLASS_NO ;


--17번
-- 춘 기술대학교에 다니고 있는 최경희 학생과 같은 과 학생들의 이름과 주소를 출력하는 SQL 문을 작성하시오.

SELECT STUDENT_NAME , STUDENT_ADDRESS 
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO 
						FROM TB_STUDENT
						WHERE STUDENT_NAME = '최경희');



?????????????

--18번
-- 국어국문학과에서 총 평점이 가장 높은 학생의 이름과 학번을 표시하는 SQL문을 작성하시오

				
SELECT STUDENT_NAME , STUDENT_NO 
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
WHERE MAX(AVG(POINT));
			
					
					
??????????????					
--19번
-- 춘 기술대학교의 "환경조경학과"가 속한 같은 계열 학과들의 학과 별 전공과목 평점을 파악하기 위한 적절한 SQL문을 찾아내시오.
-- 단, 출력헤더는 "계열 학과명", "전공평점"으로 표시되도록 하고, 평점은 소수점 한자리까지만 반올림하여 표시되도록 한다.










