-- 07_SUBQUERY_실습문제

-- 1. 전지연이 속해있는 부서원

SELECT EMP_ID , EMP_NAME , PHONE , HIRE_DATE , DEPT_TITLE
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
WHERE DEPT_CODE = (SELECT DEPT_CODE
					FROM EMPLOYEE
					WHERE EMP_NAME = '전지연')
AND EMP_NAME <> '전지연'
ORDER BY EMP_ID ;

--2 
SELECT EMP_ID , EMP_NAME , PHONE , SALARY , JOB_NAME
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
WHERE SALARY = (SELECT MAX(SALARY) 
				FROM EMPLOYEE
				WHERE EXTRACT (YEAR FROM HIRE_DATE) >= 2000);

--3
SELECT EMP_ID , EMP_NAME , DEPT_CODE , JOB_CODE , DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON (DEPT_ID = DEPT_CODE)
JOIN JOB USING (JOB_CODE)
WHERE (DEPT_CODE, JOB_CODE) = (SELECT DEPT_CODE, JOB_CODE
							FROM EMPLOYEE
							WHERE EMP_NAME = '노옹철')
AND EMP_NAME <> '노옹철';


--4. 
SELECT EMP_ID , EMP_NAME , DEPT_CODE , JOB_CODE , TO_CHAR(HIRE_DATE, 'YY/MM/DD')
FROM EMPLOYEE 
WHERE (DEPT_CODE, JOB_CODE) = (SELECT DEPT_CODE , JOB_CODE 
							FROM EMPLOYEE 
							WHERE EXTRACT (YEAR FROM HIRE_DATE) = 2000);

--5
SELECT EMP_ID , EMP_NAME , DEPT_CODE , MANAGER_ID , EMP_NO , HIRE_DATE 
FROM EMPLOYEE e 						
WHERE (DEPT_CODE , MANAGER_ID) IN (SELECT DEPT_CODE , MANAGER_ID
									FROM EMPLOYEE e 
									WHERE SUBSTR(EMP_NO, 1, 2) = '77'
									AND SUBSTR(EMP_NO, 8, 1) = '2')
ORDER BY 1;


--6 ** 다시 풀기!
SELECT EMP_ID , EMP_NAME , NVL(DEPT_TITLE, '소속없음'), JOB_NAME, TO_CHAR(HIRE_DATE, 'YY/MM/DD')
FROM EMPLOYEE e 
LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
JOIN JOB USING(JOB_CODE)
WHERE HIRE_DATE IN (SELECT MIN(HIRE_DATE)
					FROM EMPLOYEE
					WHERE ENT_YN = 'N'
					GROUP BY DEPT_CODE 
					)
ORDER BY HIRE_DATE ;




-- 7 ** 다시 풀기!

SELECT EMP_ID , EMP_NAME , JOB_NAME, 
	EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM (TO_DATE(SUBSTR(EMP_NO,1,2),'RR'))) AS 나이,
	TO_CHAR((SALARY * NVL(BONUS, 0) + SALARY ) * 12, 'L999,999,999') AS 보너스포함연봉
FROM EMPLOYEE e 
JOIN JOB USING(JOB_CODE)
WHERE (JOB_CODE, EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM (TO_DATE(SUBSTR(EMP_NO,1,2),'RR')))) IN (SELECT JOB_CODE,MIN(EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM (TO_DATE(SUBSTR(EMP_NO,1,2),'RR')))) 
FROM EMPLOYEE 
GROUP BY JOB_CODE )
ORDER BY 나이 DESC;


SELECT MIN(EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM (TO_DATE(SUBSTR(EMP_NO,1,2),'RR')))) 
FROM EMPLOYEE 
GROUP BY JOB_CODE 

-----------------------------------------------------
-- workbook
--SQL03_SELECT(OPTION)

--1
SELECT STUDENT_NAME AS "학생 이름" , STUDENT_ADDRESS AS 주소지
FROM TB_STUDENT 
ORDER BY STUDENT_NAME;

--2.
SELECT STUDENT_NAME , STUDENT_SSN 
FROM TB_STUDENT 
WHERE ABSENCE_YN = 'Y'
ORDER BY STUDENT_SSN DESC;

--3.

SELECT STUDENT_NAME AS 학생이름, STUDENT_NO AS 학번 , STUDENT_ADDRESS AS "거주지 주소"
FROM TB_STUDENT
WHERE (STUDENT_ADDRESS LIKE '강원도%' 
OR STUDENT_ADDRESS LIKE '경기도%')
AND SUBSTR(STUDENT_NO,1,1) = '9'
ORDER BY 1; 

--4

SELECT PROFESSOR_NAME , PROFESSOR_SSN 
FROM TB_PROFESSOR 
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '법학과'
ORDER BY 2;

--5
SELECT STUDENT_NO , POINT 
FROM TB_GRADE 
WHERE TERM_NO = '200402'
AND CLASS_NO = 'C3118100';


		// 부서명을 입력받아 같은 부서에 있는 사원의
		// 사원명, 부서명, 급여 조회
		SELECT EMP_NAME , NVL(DEPT_TITLE, '부서없음'), SALARY 
		FROM EMPLOYEE e 
		LEFT JOIN DEPARTMENT ON (DEPT_CODE = DEPT_ID)
		WHERE NVL(DEPT_TITLE, '부서없음') = input


		
		// 직급명, 급여를 입력받아
		// 해당 직급에서 입력 받은 급여보다 많이 받는 사원의
		// 이름, 직급명, 급여, 연봉을 조회하여 출력
		// 단, 조회 결과가 없으면 "조회 결과 없음" 출력
		
		// 조회 결과가 있으면 아래와 같이 출력
		// 선동일 / 대표 / 8000000 / 96000000
		// 송중기 / 부장 / 6000000 / 72000000
		// ...
		
		SELECT EMP_NAME , JOB_NAME, SALARY , SALARY * 12 ANNUAL_INCOME
		FROM EMPLOYEE e 
		JOIN JOB USING(JOB_CODE)
		WHERE JOB_NAME = '대표'
		AND SALARY > 700000;
	
	
		// 입사일을 입력("2022-09-06") 받아
		// 입력 받은 값보다 먼저 입사한 사람의
		// 이름, 입사일, 성별(M,F) 조회

		SELECT EMP_NAME , TO_CHAR(HIRE_DATE, 'YYYY"년" MM"월" DD"일"') AS "HIRE_DATE" , 
		DECODE(SUBSTR(EMP_NO, 8, 1), '1', 'M', '2', 'F') AS GENDER 
		FROM EMPLOYEE 
		WHERE HIRE_DATE < TO_DATE('2005-05-05');

		
-----------------------------------------------------

SELECT JOB_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY ROLLUP(JOB_CODE)
ORDER BY 1;

SELECT JOB_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY CUBE(JOB_CODE)
ORDER BY 1;


SELECT DEPT_CODE, JOB_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY ROLLUP(DEPT_CODE, JOB_CODE)
ORDER BY 1;


SELECT DEPT_CODE, JOB_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY CUBE(DEPT_CODE, JOB_CODE)
ORDER BY 1;
 
-----------------------------------------------------
DROP TABLE USER_TEST;

CREATE TABLE USER_TEST(
	USER_NO NUMBER CONSTRAINT PK_USER_TEST PRIMARY KEY,
	USER_ID VARCHAR2(20) CONSTRAINT UK_USER_ID UNIQUE,
	USER_PWD VARCHAR2(20) CONSTRAINT NN_USER_PWD NOT NULL,
	PNO VARCHAR2(20) CONSTRAINT NN_PNO NOT NULL,
	GENDER CHAR(3) CONSTRAINT CK_GENDER CHECK(GENDER IN ('남', '여')),
	PHONE VARCHAR2(20),
	ADDRESS VARCHAR2(100),
	STATUS VARCHAR2(3) DEFAULT 'N' CONSTRAINT NN_STATUS NOT NULL,
	
	CONSTRAINT UK_PNO UNIQUE(PNO),
	CONSTRAINT CK_STATUS CHECK(STATUS IN ('Y', 'N'))
);

SELECT * FROM USER_TEST;


COMMENT ON COLUMN USER_TEST.USER_NO IS '회원번호';
COMMENT ON COLUMN USER_TEST.USER_ID IS '회원아이디';
COMMENT ON COLUMN USER_TEST.USER_PWD IS '회원비밀번호';
COMMENT ON COLUMN USER_TEST.PNO IS '주민등록번호';
COMMENT ON COLUMN USER_TEST.GENDER IS '성별';
COMMENT ON COLUMN USER_TEST.PHONE IS '연락처';
COMMENT ON COLUMN USER_TEST.ADDRESS IS '주소';
COMMENT ON COLUMN USER_TEST.STATUS IS '탈퇴여부';


SELECT * FROM USER_COL_COMMENTS
WHERE TABLE_NAME = 'USER_TEST';


SELECT * 
FROM USER_CONSTRAINTS c1
JOIN USER_CONS_COLUMNS c2 USING(CONSTRAINT_NAME)
WHERE c1.TABLE_NAME = 'USER_TEST';


CREATE SEQUENCE SEQ_USER_NO
START WITH 2
INCREMENT BY 1;

DELETE FROM USER_TEST 
WHERE USER_NO = 21;

DROP SEQUENCE SEQ_USER_NO;


INSERT INTO USER_TEST VALUES(SEQ_USER_NO.NEXTVAL, 'user' || SEQ_USER_NO.NEXTVAL, 'pass' || SEQ_USER_NO.NEXTVAL, '111111-2222222', '여', '01011112222', '인천광역시 서구', 'N' );
INSERT INTO USER_TEST VALUES(SEQ_USER_NO.NEXTVAL, 'user' || SEQ_USER_NO.NEXTVAL, 'pass' || SEQ_USER_NO.NEXTVAL, '123345-1643222', '남', '01012345678', '광주광역시 서구', 'N' );
INSERT INTO USER_TEST VALUES(SEQ_USER_NO.NEXTVAL, 'user' || SEQ_USER_NO.NEXTVAL, 'pass' || SEQ_USER_NO.NEXTVAL, '123345-1612342', '남', '01034567891', '서울시 강서구', 'Y' );
INSERT INTO USER_TEST VALUES(SEQ_USER_NO.NEXTVAL, 'user' || SEQ_USER_NO.NEXTVAL, 'pass' || SEQ_USER_NO.NEXTVAL, '980610-2011817', '여', '01099164658', '경기도 평택시', 'N' );
INSERT INTO USER_TEST VALUES(SEQ_USER_NO.NEXTVAL, 'user' || SEQ_USER_NO.NEXTVAL, 'pass' || SEQ_USER_NO.NEXTVAL, '971003-1080711', '남', '01046209628', '고양특례시 일산서구', 'N' );


SELECT * FROM USER_TEST;


ALTER TABLE USER_TEST ADD 

